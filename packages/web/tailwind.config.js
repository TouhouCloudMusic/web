/** @type {import('tailwindcss').Config} */
export default {
	content: [
		"./src/component/**/*.{ts,tsx}",
		"./src/page/**/*.{ts,tsx}",
		"./src/route/**/*.{ts,tsx}",
		"./src/app.tsx",
	],
	darkMode: ["selector", '[data-mode="dark"]'],
	theme: {
		colors: {
			inherit: "inherit",
			current: "currentColor",
			transparent: "transparent",
			black: "hsl(0 0 0 / <alpha-value>)",
			white: "hsl(0 0 100 / <alpha-value>)",
			main: "hsl(var(--bg-main) / <alpha-value>)",
			highlight: "hsl(var(--bg-highlight) / <alpha-value>)",
			gray: {
				100: "hsl(var(--gray-100) / <alpha-value>)",
				200: "hsl(var(--gray-200) / <alpha-value>)",
				300: "hsl(var(--gray-300) / <alpha-value>)",
				400: "hsl(var(--gray-400) / <alpha-value>)",
				500: "hsl(var(--gray-500) / <alpha-value>)",
				600: "hsl(var(--gray-600) / <alpha-value>)",
				700: "hsl(var(--gray-700) / <alpha-value>)",
				800: "hsl(var(--gray-800) / <alpha-value>)",
				900: "hsl(var(--gray-900) / <alpha-value>)",
				1000: "hsl(var(--gray-1000) / <alpha-value>)",
			},
			red: {
				100: "hsl(var(--red-100) / <alpha-value>)",
				200: "hsl(var(--red-200) / <alpha-value>)",
				300: "hsl(var(--red-300) / <alpha-value>)",
				400: "hsl(var(--red-400) / <alpha-value>)",
				500: "hsl(var(--red-500) / <alpha-value>)",
				600: "hsl(var(--red-600) / <alpha-value>)",
				700: "hsl(var(--red-700) / <alpha-value>)",
				800: "hsl(var(--red-800) / <alpha-value>)",
				900: "hsl(var(--red-900) / <alpha-value>)",
				1000: "hsl(var(--red-1000) / <alpha-value>)",
			},
			orange: {
				100: "hsl(var(--orange-100) / <alpha-value>)",
				200: "hsl(var(--orange-200) / <alpha-value>)",
				300: "hsl(var(--orange-300) / <alpha-value>)",
				400: "hsl(var(--orange-400) / <alpha-value>)",
				500: "hsl(var(--orange-500) / <alpha-value>)",
				600: "hsl(var(--orange-600) / <alpha-value>)",
				700: "hsl(var(--orange-700) / <alpha-value>)",
				800: "hsl(var(--orange-800) / <alpha-value>)",
				900: "hsl(var(--orange-900) / <alpha-value>)",
				1000: "hsl(var(--orange-1000) / <alpha-value>)",
			},
			green: {
				100: "hsl(var(--green-100) / <alpha-value>)",
				200: "hsl(var(--green-200) / <alpha-value>)",
				300: "hsl(var(--green-300) / <alpha-value>)",
				400: "hsl(var(--green-400) / <alpha-value>)",
				500: "hsl(var(--green-500) / <alpha-value>)",
				600: "hsl(var(--green-600) / <alpha-value>)",
				700: "hsl(var(--green-700) / <alpha-value>)",
				800: "hsl(var(--green-800) / <alpha-value>)",
				900: "hsl(var(--green-900) / <alpha-value>)",
				1000: "hsl(var(--green-1000) / <alpha-value>)",
			},
			cyan: {
				100: "hsl(var(--cyan-100) / <alpha-value>)",
				200: "hsl(var(--cyan-200) / <alpha-value>)",
				300: "hsl(var(--cyan-300) / <alpha-value>)",
				400: "hsl(var(--cyan-400) / <alpha-value>)",
				500: "hsl(var(--cyan-500) / <alpha-value>)",
				600: "hsl(var(--cyan-600) / <alpha-value>)",
				700: "hsl(var(--cyan-700) / <alpha-value>)",
				800: "hsl(var(--cyan-800) / <alpha-value>)",
				900: "hsl(var(--cyan-900) / <alpha-value>)",
				1000: "hsl(var(--cyan-1000) / <alpha-value>)",
			},
			blue: {
				100: "hsl(var(--blue-100) / <alpha-value>)",
				200: "hsl(var(--blue-200) / <alpha-value>)",
				300: "hsl(var(--blue-300) / <alpha-value>)",
				400: "hsl(var(--blue-400) / <alpha-value>)",
				500: "hsl(var(--blue-500) / <alpha-value>)",
				600: "hsl(var(--blue-600) / <alpha-value>)",
				700: "hsl(var(--blue-700) / <alpha-value>)",
				800: "hsl(var(--blue-800) / <alpha-value>)",
				900: "hsl(var(--blue-900) / <alpha-value>)",
				1000: "hsl(var(--blue-1000) / <alpha-value>)",
			},
			purple: {
				100: "hsl(var(--purple-100) / <alpha-value>)",
				200: "hsl(var(--purple-200) / <alpha-value>)",
				300: "hsl(var(--purple-300) / <alpha-value>)",
				400: "hsl(var(--purple-400) / <alpha-value>)",
				500: "hsl(var(--purple-500) / <alpha-value>)",
				600: "hsl(var(--purple-600) / <alpha-value>)",
				700: "hsl(var(--purple-700) / <alpha-value>)",
				800: "hsl(var(--purple-800) / <alpha-value>)",
				900: "hsl(var(--purple-900) / <alpha-value>)",
				1000: "hsl(var(--purple-1000) / <alpha-value>)",
			},
			pink: {
				100: "hsl(var(--pink-100) / <alpha-value>)",
				200: "hsl(var(--pink-200) / <alpha-value>)",
				300: "hsl(var(--pink-300) / <alpha-value>)",
				400: "hsl(var(--pink-400) / <alpha-value>)",
				500: "hsl(var(--pink-500) / <alpha-value>)",
				600: "hsl(var(--pink-600) / <alpha-value>)",
				700: "hsl(var(--pink-700) / <alpha-value>)",
				800: "hsl(var(--pink-800) / <alpha-value>)",
				900: "hsl(var(--pink-900) / <alpha-value>)",
				1000: "hsl(var(--pink-1000) / <alpha-value>)",
			},
		},
		fontFamily: {
			sans: [
				"Geist",
				"ui-sans-serif",
				"system-ui",
				"sans-serif",
				'"Apple Color Emoji"',
				'"Segoe UI Emoji"',
				'"Segoe UI Symbol"',
				'"Noto Color Emoji"',
			],
			serif: [
				"ui-serif",
				"Georgia",
				"Cambria",
				'"Times New Roman"',
				"Times",
				"serif",
			],
			mono: [
				"ui-monospace",
				"SFMono-Regular",
				"Menlo",
				"Monaco",
				"Consolas",
				'"Liberation Mono"',
				'"Courier New"',
				"monospace",
			],
		},
	},
	plugins: [],
}
